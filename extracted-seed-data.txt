  // Create courses
  console.log('\nüìö Creating courses...');
  const course_CS101 = await prisma.course.create({
    data: {
      course_name: "Computer Vision",
      course_description: "This course introduces students to the fundamentals and applications of computer vision, focusing on how machines perceive and interpret visual data. Topics include image processing, object detection, motion analysis, and feature extraction.",
      course_code: "CS101",
      course_start_date: new Date("2025-06-26T00:00:00.000Z"),
      course_end_date: new Date("2025-08-27T00:00:00.000Z"),
      course_enrollments: ["cmcc2iykn0006rb5tzdzlnv0i"],
      created_by: "cmcc2iyir0000rb5tgumris2w",
      modified_by: "cmcc2iykn0006rb5tzdzlnv0i",
    }
  });

  // Create course units
  console.log('\nüìñ Creating course units...');
  await prisma.courseUnit.create({
    data: {
      course_id: course_CS101.id,
      unit_number: 1,
      unit_name: "Introduction to Computer vision",
      unit_description: "Filters
Histograms
Thresholding",
      assignment_count: 10,
      hours_per_unit: 10,
      created_by: "cmcc2iyir0000rb5tgumris2w",
      modified_by: null,
    }
  });
  await prisma.courseUnit.create({
    data: {
      course_id: course_CS101.id,
      unit_number: 2,
      unit_name: "Feature Detection and Matching",
      unit_description: "SIFT
SURF
ORB",
      assignment_count: 3,
      hours_per_unit: 12,
      created_by: "cmcc2iyir0000rb5tgumris2w",
      modified_by: null,
    }
  });

  // Create lab components
  console.log('\nüî¨ Creating lab components...');
  await prisma.labComponent.create({
    data: {
      component_name: "Arduino Uno R3",
      component_description: "Arduino Uno is an open-source microcontroller board based on the ATmega328P, designed for building interactive electronics projects with ease.",
      component_specification: "ATmega328P MCU, 14 digital I/O pins, 6 analog inputs, 16 MHz clock speed, USB-powered, 5V operating voltage.",
      component_quantity: 10,
      component_tag_id: "445RO",
      component_category: "Electrical",
      component_location: "LAB C",
      image_path: "lab-images",
      front_image_id: "1750927038409_WhatsApp Image 2025-06-19 at 21.50.44.jpeg",
      back_image_id: "1750927038423_A000066_04.back_934x700.jpg",
      invoice_number: "inv2233444",
      purchase_value: 300,
      purchased_from: "amazon",
      purchase_currency: "INR",
      purchase_date: new Date("2025-06-10T00:00:00.000Z"),
      created_by: "Admin",
      modified_by: "Admin",
    }
  });
  await prisma.labComponent.create({
    data: {
      component_name: "NodeMCU ",
      component_description: "NodeMCU ESP8266 is a low-power, Wi-Fi-enabled microcontroller board ideal for IoT applications, offering GPIOs, serial communication, and easy programming via USB.",
      component_specification: "ESP8266 Wi-Fi SoC, 80 MHz clock, 4MB flash, 11 digital GPIOs, USB-to-serial, operates at 3.3V logic.",
      component_quantity: 8,
      component_tag_id: "ESP8266",
      component_category: "Electrical",
      component_location: "Storage ROOM",
      image_path: "lab-images",
      front_image_id: "1750927248606_WhatsApp Image 2025-06-19 at 21.50.45.jpeg",
      back_image_id: "1750927248621_WhatsApp Image 2025-06-19 at 21.50.39.jpeg",
      invoice_number: "invc223387",
      purchase_value: 120,
      purchased_from: "Flipcart",
      purchase_currency: "INR",
      purchase_date: new Date("2025-06-06T00:00:00.000Z"),
      created_by: "Admin",
      modified_by: null,
    }
  });
  await prisma.labComponent.create({
    data: {
      component_name: "Display ",
      component_description: "test description ",
      component_specification: "test specifications",
      component_quantity: 1,
      component_tag_id: "142RW",
      component_category: "Electrical",
      component_location: "LAB C",
      image_path: "lab-images",
      front_image_id: "1750930825226_WhatsApp Image 2025-06-19 at 21.50.46 (1).jpeg",
      back_image_id: "1750930825242_WhatsApp Image 2025-06-19 at 21.50.46.jpeg",
      invoice_number: "inv20350626",
      purchase_value: 120,
      purchased_from: "amazon",
      purchase_currency: "INR",
      purchase_date: new Date("2025-06-19T00:00:00.000Z"),
      created_by: "Admin",
      modified_by: null,
    }
  });
  await prisma.labComponent.create({
    data: {
      component_name: "test comp",
      component_description: "test deescription ",
      component_specification: "test specs ",
      component_quantity: 1,
      component_tag_id: "123EX",
      component_category: "Electrical",
      component_location: "Storage ROOM",
      image_path: "lab-images",
      front_image_id: "1750931549099_WhatsApp Image 2025-06-19 at 21.50.46 (1).jpeg",
      back_image_id: "1750931549113_WhatsApp Image 2025-06-19 at 21.50.46.jpeg",
      invoice_number: "inv234412",
      purchase_value: 130,
      purchased_from: "Company xyz",
      purchase_currency: "INR",
      purchase_date: new Date("2025-06-18T00:00:00.000Z"),
      created_by: "Admin",
      modified_by: null,
    }
  });

  // Create locations
  console.log('\nüè¢ Creating locations...');
  await prisma.location.create({
    data: {
      name: "Board Room",
      capacity: 15,
      description: "A formal meeting space equipped for executive discussions, decision-making, and strategic planning sessions",
      is_available: true,
      building: "BE Block",
      floor: "12",
      room_number: "1504",
      wing: null,
      images: ["/location-images/1750928233933_rgaa0rijhef.jpeg","/location-images/1750928239024_qd87zi28roj.jpeg"],
      location_type: "CABIN",
      created_by: "cmcc2c35n0000rbochm6bmvvu",
      modified_by: "cmcc2c35n0000rbochm6bmvvu",
    }
  });

  // Create projects
  console.log('\nüìã Creating projects...');
  await prisma.project.create({
    data: {
      name: "Smart Attendance System Using Face Detection",
      description: "This project aims to automate attendance marking in classrooms using real-time face detection and recognition. It replaces traditional roll-call or manual entry methods with a system that identifies and logs student attendance as soon as they appear in front of the camera.",
      components_needed: ["77c4d5d5-95f5-499b-8ba7-f4c2d7cb0966"],
      course_id: course_COURSE_ID,
      created_by: "cmcc2iykn0006rb5tzdzlnv0i",
      accepted_by: "cmcc2iyir0001rb5t80bto8rx",
      expected_completion_date: new Date("2025-07-03T08:54:00.000Z"),
      modified_by: null,
      status: "ONGOING",
      type: "STUDENT_PROPOSED",
    }
  });
  await prisma.project.create({
    data: {
      name: "test ",
      description: "description ",
      components_needed: ["ec043ab2-3336-4e0a-a98f-a21d3a45c9ff","c74835e8-e647-4359-9b9a-c0f310d157e3"],
      course_id: course_COURSE_ID,
      created_by: "cmcc2iykn0006rb5tzdzlnv0i",
      accepted_by: "cmcc2iyir0001rb5t80bto8rx",
      expected_completion_date: new Date("2025-07-02T10:17:00.000Z"),
      modified_by: null,
      status: "ONGOING",
      type: "STUDENT_PROPOSED",
    }
  });

